import Head from "next/head";
import { Inter } from "@next/font/google";
import {
  Box,
  Center,
  Container,
  Flex,
  Group,
  Loader,
  Overlay,
  ScrollArea,
  Text,
} from "@mantine/core";
import YoutubeTranscript from "youtube-transcript";
import Ytb from "react-youtube";
import { useRef, useState } from "react";
import { useCounter, useShallowEffect } from "@mantine/hooks";
import ReactPlayer from "react-player";

type ModelSub = {
  link: string;
  data: [
    {
      text: string;
      duration: number;
      offset: number;
    }
  ];
};

export default function Home() {
  const [listSub, setListSub] = useState<ModelSub>();
  const [munculkan, setMunculkan] = useState(false);
  const [isClient, setIsClient] = useState(false);
  const refNya = useRef();
  const [idx, setIdx] = useCounter(0);

  useShallowEffect(() => {
    if (refNya.current) {
      setIsClient(true);
    }
  });

  useShallowEffect(() => {
    loadYtb();
  }, []);

  const loadYtb = async () => {
    const res = await fetch("/api/ytb?id=Tn6-PIqc4UM");
    if (res.status == 200) {
      const data: ModelSub = await res.json();
      setListSub(data);

      // while (idx < data.data.length) {
      //   console.log(data.data[idx].text);
      //   await new Promise((a, b) => {
      //     setTimeout(() => {
      //       console.log(data.data[idx].text);
      //       a(true);
      //       setIdx.increment();
      //     }, data.data[idx].duration);
      //   });
      // }

      // for(let itm of data.data){
      //   console.log(itm.text)
      //   await new Promise((a, b) => {
      //     setTimeout(() => {
      //       console.log(itm.text)
      //       a(true)
      //       setIdx.increment()
      //     }, itm.duration)
      //   })
      // }
    }
  };

  return (
    <>
      <div ref={refNya as any}></div>
      {/* <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head> */}
      {/* {JSON.stringify(listSub)} */}
      <Container bg={"light"}>
        {listSub?.data.length}
        <Box pos={"relative"}>
          {isClient && (
            <ReactPlayer
              config={{
                file: {
                  tracks: [
                    { label: "ini apa", kind: "", src: "", srcLang: "" },
                  ],
                },
              }}
              onPlay={() => {
                setMunculkan(true);
              }}
              url={`https://www.youtube.com/watch?v=${listSub?.link}`}
            />
          )}
          {!listSub && (
            <Overlay>
              <Center h={300}>
                <Loader />
              </Center>
            </Overlay>
          )}
        </Box>
        <Box>
          {idx}
          {listSub && (
            <ScrollArea h={300}>
              <Flex wrap={"wrap"} gap={"xs"}>
                {listSub!.data.map((v, i) => (
                  <Text key={i} c={i == idx ? "orange" : "gray"}>
                    {v.text}
                  </Text>
                ))}
              </Flex>
            </ScrollArea>
          )}
        </Box>
      </Container>
    </>
  );
}
